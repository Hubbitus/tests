#!/bin/bash

# Prepare test data:
# 1) First many small files. F.e. Linux source tree - ~50000 files:
#git clone --depth 1 git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
# 2) 1 big file at 1GB size, random data:
#dd if=/dev/urandom of=1gb.test bs=1024 count=$[ 1024 * 1024 ]
#dd if=/dev/urandom of=100mb.test bs=1024 count=$[ 1024 * 100 ]

DEST=test.transfer
DEFAULT_CLEAR_COMMAND="rm -rf $DEST"
DEFAULT_TEST_ITERATIONS=2

rm -rf "$DEST"

DEFCOLOR="\e[0m"
RED="\e[1;31m"
GREEN="\e[32m"
GGREEN="\e[1;32m"
BLUE="\e[1;34m"
CYAN="\e[1;36m"
WHITE="\e[1;37m"
BLUEBG="\e[44m"

# $1 - TestName
# $2 - CMD to test
# $3 - Amount of runs. Optional. By default $DEFAULT_TEST_ITERATIONS.
# $4 - Optional. Command to cleanup. By default $DEFAULT_CLEAR_COMMAND used
function testTransfer(){
	for (( i = 1; i <= ${3:-$DEFAULT_TEST_ITERATIONS}; i++ )); do
		echo -e "##############################################################################################"
		echo -e "### ${GREEN}$1${DEFCOLOR}"
		echo -e "### Pass #${RED}$i/${3:-$DEFAULT_TEST_ITERATIONS}${DEFCOLOR}"
		echo -e "### CMD: $2"
		echo -e "### Date: ${BLUE}$(date +'%F_%T')${DEFCOLOR}"
		echo -e "##############################################################################################"

		echo 'Sync'
		sync
		echo 'Drop caches'
		sudo sh -c 'echo 3 > /proc/sys/vm/drop_caches'

		time eval "$2 2>&1 | egrep -v '^bbcp: Creating' --line-buffered"

		[ ! -z "${4:-$DEFAULT_CLEAR_COMMAND}" ] && eval "${4:-$DEFAULT_CLEAR_COMMAND}"
	done
}

# $1 - base name to add differenced options
# $2 - base bbcp options to add with
function testBBCPvariats(){
	BASE_NAME="$1"
	BASE_PARAM="$2"

	testTransfer "$BASE_NAME" \
		"bbcp $BASE_PARAM"

	testTransfer "$BASE_NAME; ${BLUEBG}with MD5${DEFCOLOR}" \
		"bbcp -e $BASE_PARAM"

	testTransfer "$BASE_NAME; ${BLUEBG}TCP window 64K${DEFCOLOR}" \
		"bbcp -w 64K $BASE_PARAM"

	testTransfer "$BASE_NAME; ${BLUEBG}TCP window 128K${DEFCOLOR}" \
		"bbcp -w 128K $BASE_PARAM"

	testTransfer "$BASE_NAME; ${BLUEBG}TCP window 512K${DEFCOLOR}" \
		"bbcp -w 512K $BASE_PARAM"

	testTransfer "$BASE_NAME; ${BLUEBG}TCP window 2M${DEFCOLOR}" \
		"bbcp -w 2M $BASE_PARAM"

	testTransfer "$BASE_NAME; ${BLUEBG}TCP window 4M${DEFCOLOR}" \
		"bbcp -w 4M $BASE_PARAM"

	testTransfer "$BASE_NAME; ${BLUEBG}TCP streams: 1${DEFCOLOR}" \
		"bbcp -s 1 $BASE_PARAM"

	testTransfer "$BASE_NAME; ${BLUEBG}TCP streams: 2${DEFCOLOR}" \
		"bbcp -s 2 $BASE_PARAM"

	testTransfer "$BASE_NAME; ${BLUEBG}TCP streams: 4${DEFCOLOR}" \
		"bbcp -s 4 $BASE_PARAM"

	testTransfer "$BASE_NAME; ${BLUEBG}TCP streams: 8${DEFCOLOR}" \
		"bbcp -s 8 $BASE_PARAM"

	testTransfer "$BASE_NAME; ${BLUEBG}TCP streams: 16${DEFCOLOR}" \
		"bbcp -s 16 $BASE_PARAM"
}

#################### Tests itself ######################

{
#FROM=linux/block
#FROM=linux/arch
FROM=linux/arch/arm
DEST=test.transfer

testBBCPvariats \
	"BBCP: Many files (files: $(find $FROM -type f | wc -l), dirs: $(find $FROM -type d | wc -l), bytes: $(du -hs $FROM | cut -f1))" \
	"-FnAOprkz -P 2 'localhost:/home/pasha/temp/Speed.test/bbcp/$FROM' '$DEST'"

# -v --progress --itemize-changes --stats --human-readable --partial --inplace
testTransfer "RSYNC: Transfer many files locally (files: $(find $FROM -type f | wc -l), dirs: $(find $FROM -type d | wc -l), bytes: $(du -hs $FROM | cut -f1))" \
	"rsync -aHAErlDz '$FROM' '$DEST'"

# -v --progress --itemize-changes --stats --human-readable --partial --inplace
testTransfer "RSYNC: Transfer many files REMOTELY(localhost:) (files: $(find $FROM -type f | wc -l), dirs: $(find $FROM -type d | wc -l), bytes: $(du -hs $FROM | cut -f1))" \
	"rsync -aHAErlDz 'localhost:/home/pasha/temp/Speed.test/bbcp/$FROM' '$DEST'"

#########################

FROM=100mb.test

testBBCPvariats \
	"BBCP: 1 big file 100MB: $(ls -l $FROM)" \
	"-FnAOprkz -P 2 'localhost:/home/pasha/temp/Speed.test/bbcp/$FROM' '$DEST'"

# -v --progress --itemize-changes --stats --human-readable --partial --inplace
testTransfer "RSYNC: Transfer 1 big file 100MB locally: $(ls -l $FROM)" \
	"rsync -aHAErlDz '$FROM' '$DEST'"

testTransfer "RSYNC: Transfer 1 big file 100MB REMOTELY(localhost:) $(ls -l $FROM)" \
	"rsync -aHAErlDz 'localhost:/home/pasha/temp/Speed.test/bbcp/$FROM' '$DEST'"

} 2>&1 | tee test.$(date +'%F_%T').log

